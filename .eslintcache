[{"D:\\Users\\User\\Desktop\\UCU\\OP\\Mini-project\\front\\src\\index.js":"1","D:\\Users\\User\\Desktop\\UCU\\OP\\Mini-project\\front\\src\\reportWebVitals.js":"2","D:\\Users\\User\\Desktop\\UCU\\OP\\Mini-project\\front\\src\\App.js":"3","D:\\Users\\User\\Desktop\\UCU\\OP\\Mini-project\\front\\src\\GoogleMaps.js":"4","D:\\Users\\User\\Desktop\\UCU\\OP\\Mini-project\\front\\src\\Services\\httpRequests.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":7499,"mtime":1608660750521,"results":"9","hashOfConfig":"7"},{"size":630,"mtime":1608658869551,"results":"10","hashOfConfig":"7"},{"size":1383,"mtime":1608663466957,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1boetnm",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Users\\User\\Desktop\\UCU\\OP\\Mini-project\\front\\src\\index.js",[],["24","25"],"D:\\Users\\User\\Desktop\\UCU\\OP\\Mini-project\\front\\src\\reportWebVitals.js",[],"D:\\Users\\User\\Desktop\\UCU\\OP\\Mini-project\\front\\src\\App.js",["26","27","28"],"import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles, responsiveFontSizes } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Container } from '@material-ui/core';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport clsx from 'clsx';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport MapContainer from './GoogleMaps';\r\nimport { getAllEntries } from './Services/httpRequests'\r\n\r\n// Languages\r\nconst Languages = ['Kazakh', 'Swedish', 'Yiddish', 'Karachay-Balkar', 'Russian', 'Portuguese', 'Cornish', 'Syriac', 'Altaic languages', 'Manx', 'Latvian', 'Walloon', 'French', 'Scots', 'Bashkir', 'Komi', 'Kirghiz', 'Georgian', 'Hungarian', 'Tsonga', 'Altai', 'Gaelic', 'Maori', 'Latin', 'Artificial languages', 'Belarusian', 'Swahili', 'Icelandic', 'Gothic', 'Irish', 'Neapolitan', 'Romansh', 'Spanish', 'Dutch', 'German', 'Esperanto', 'North Ndebele', 'Persian', 'Welsh', 'Zulu', 'Ladino', 'Tongan', 'Italian', 'Hawaiian', 'Aromanian', 'English', 'Shona', 'Samoan', 'Romany']\r\n\r\n\r\n\r\n// styles\r\nconst Theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#407899',\r\n    },\r\n    secondary: {\r\n      light: '#0066ff',\r\n      main: '#0044ff',\r\n      contrastText: '#ffcc00',\r\n    },\r\n    tonalOffset: 0.2,\r\n  },\r\n});\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(0),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 200,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n}));\r\n// Googlemaps\r\n\r\n\r\n\r\n// App\r\nfunction App() {\r\n\r\n  getAllEntries([\"ISBN\", \"Place of creation/publication\"]).then((resp) => {\r\n    console.log(resp)\r\n  })\r\n\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    left: false,\r\n  });\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const [language, setLanguage] = React.useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setLanguage(event.target.value);\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      })}\r\n      role=\"presentation\"\r\n    >\r\n\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-autowidth-label\">Age</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-autowidth-label\"\r\n          id=\"demo-simple-select-autowidth\"\r\n          value={language}\r\n          onChange={handleChange}\r\n          autoWidth\r\n        >\r\n          {Languages.map((lan) => {\r\n            return(\r\n              <MenuItem value={lan}>{lan}</MenuItem>\r\n            )\r\n          })}\r\n        </Select>\r\n        <FormHelperText>Date</FormHelperText>\r\n      </FormControl>\r\n      <Divider />\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-autowidth-label\">Age</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-autowidth-label\"\r\n          id=\"demo-simple-select-autowidth\"\r\n          value={language}\r\n          onChange={handleChange}\r\n          autoWidth\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Language </FormHelperText>\r\n      </FormControl>\r\n      <Divider />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        endIcon={<SendIcon />}\r\n      >\r\n        Make query\r\n      </Button>\r\n    </div>\r\n  );\r\n\r\n\r\n\r\n\r\n  return (\r\n    <ThemeProvider theme={Theme}>\r\n      <Container maxWidth style={{ margin: 0, padding: 0 }}>\r\n        <AppBar position=\"static\" color=\"primary\">\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={toggleDrawer('left', true)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            {['left'].map((anchor) => (\r\n              <React.Fragment key={anchor}>\r\n                <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\r\n                  {list(anchor)}\r\n                </Drawer>\r\n              </React.Fragment>\r\n            ))}\r\n            <Typography className={classes.title} variant=\"h6\" noWrap>\r\n              Google Maps\r\n          </Typography>\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                placeholder=\"Searchâ€¦\"\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput,\r\n                }}\r\n                inputProps={{ 'aria-label': 'search' }}\r\n              />\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Container>\r\n      <Container maxWidth style={{ margin: 0, padding: 0 }}>\r\n        {/* <MapContainer></MapContainer> */}\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Users\\User\\Desktop\\UCU\\OP\\Mini-project\\front\\src\\GoogleMaps.js",[],"D:\\Users\\User\\Desktop\\UCU\\OP\\Mini-project\\front\\src\\Services\\httpRequests.js",[],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":8,"column":28,"nodeType":"35","messageId":"36","endLine":8,"endColumn":47},{"ruleId":"33","severity":1,"message":"37","line":10,"column":8,"nodeType":"35","messageId":"36","endLine":10,"endColumn":12},{"ruleId":"33","severity":1,"message":"38","line":24,"column":8,"nodeType":"35","messageId":"36","endLine":24,"endColumn":20},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'responsiveFontSizes' is defined but never used.","Identifier","unusedVar","'Grid' is defined but never used.","'MapContainer' is defined but never used.","no-global-assign","no-unsafe-negation"]